#!/bin/bash

# Ensure the script was run with exactly one argument (the MySQL root password)
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <MySQL root password>"
    exit 1
fi

# Assign the provided password to a variable for later use
PASSWORD=$1

# Generate a date string in day-month-year format for use in the filename
DATE=$(date +%d-%m-%Y)

# Define the names of the backup and archive files
BACKUP_FILE="backup.sql"
ARCHIVE_NAME="${DATE}.tar.gz"

# Perform the MySQL dump of all databases using the root user and the provided password
mysqldump --user=root --password="${PASSWORD}" --all-databases > "${BACKUP_FILE}"

# Check if the mysqldump command was successful
if [ $? -ne 0 ]; then
    echo "Failed to create MySQL dump."
    exit 2
fi

# Compress the SQL dump file into a tar.gz archive using the date-named file
tar -czf "${ARCHIVE_NAME}" "${BACKUP_FILE}"

# Check if the tar command was successful
if [ $? -ne 0 ]; then
    echo "Failed to compress the backup file."
    exit 3
fi

# Remove the original SQL dump file to save space
rm "${BACKUP_FILE}"

# Print a success message with the name of the created archive
echo "Backup was successful. File created: ${ARCHIVE_NAME}"

